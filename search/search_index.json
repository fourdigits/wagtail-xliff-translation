{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Wagtail XLIFF Translation Wagtail XLIFF Translation is a Wagtail library for converting a Wagtail website to XLIFF (XML Localization Interchange File Format) and back. It allows translators to work with -XLIFF based- translation software. What does it do? Wagtail XLIFF Translation provides a download view in the Wagtail admin to export site contents to XLIFF file. Once the file is translated, it can be uploaded to create a translated site tree. Exporting and importing a sub-tree, or a single page is supported. Known limitations Related objects (such as images, documents, and snippets) are not translated or duplicated. Pages will be in draft mode. Pages need to be reviewed and published. Nested StreamBlocks are known to cause issues since their database values are not correct. We've been able to make it work to 3 levels of nesting, however they seem to fail after that. The page will be created but cause errors when you try to edit the page and will probably also cause errors when using the pages in a frontend. Installation To install: pip install wagtail-xliff-translation In settings.py: Add 'wagtail_xliff_translation' to INSTALLED_APPS . Add 'SERIALIZATION_MODULES = {\"xliff\": \"wagtail_xliff_translation.serializers\"}' setting. Like so: # settings.py INSTALLED_APPS = [ 'wagtail_xliff_translation', ... ] SERIALIZATION_MODULES = {\"xliff\": \"wagtail_xliff_translation.serializers\"}","title":"Home"},{"location":"#wagtail-xliff-translation","text":"Wagtail XLIFF Translation is a Wagtail library for converting a Wagtail website to XLIFF (XML Localization Interchange File Format) and back. It allows translators to work with -XLIFF based- translation software.","title":"Wagtail XLIFF Translation"},{"location":"#what-does-it-do","text":"Wagtail XLIFF Translation provides a download view in the Wagtail admin to export site contents to XLIFF file. Once the file is translated, it can be uploaded to create a translated site tree. Exporting and importing a sub-tree, or a single page is supported.","title":"What does it do?"},{"location":"#known-limitations","text":"Related objects (such as images, documents, and snippets) are not translated or duplicated. Pages will be in draft mode. Pages need to be reviewed and published. Nested StreamBlocks are known to cause issues since their database values are not correct. We've been able to make it work to 3 levels of nesting, however they seem to fail after that. The page will be created but cause errors when you try to edit the page and will probably also cause errors when using the pages in a frontend.","title":"Known limitations"},{"location":"#installation","text":"To install: pip install wagtail-xliff-translation In settings.py: Add 'wagtail_xliff_translation' to INSTALLED_APPS . Add 'SERIALIZATION_MODULES = {\"xliff\": \"wagtail_xliff_translation.serializers\"}' setting. Like so: # settings.py INSTALLED_APPS = [ 'wagtail_xliff_translation', ... ] SERIALIZATION_MODULES = {\"xliff\": \"wagtail_xliff_translation.serializers\"}","title":"Installation"},{"location":"development/","text":"Development Install this package in development mode: git clone git@github.com:fourdigits/wagtail-xliff-translation.git cd wagtail-xliff-translation With your preferred virtualenv activated, install the package in development mode with the included testing and documentation dependencies: python -m pip install -e '.[test,docs]' -U Tests Run tests: pytest The test app can be managed (runserver, makemigrations, etc): python manage.py makemigrations test_app Documentation Run the documentation locally: mkdocs serve Deploy the documentation to Github pages: mkdocs gh-deploy See https://fourdigits.github.io/wagtail-xliff-translation/ Release Process Pre release Update CONTRIBUTORS.rst if necessary Update CHANGELOG.txt Update version = <MAJOR>.<MINOR>.<PATCH> in setup.cfg Everything is committed, clean checkout Release With an active virtual environment: pytest git tag -a <MAJOR>.<MINOR>.<PATCH> -m \"<message>\" git push --tags python -m pip install --upgrade build python -m build python -m pip install --upgrade twine python -m twine upload --repository pypi dist/* Post release Add new header <MAJOR>.<MINOR>.<PATCH> - IN DEVELOPMENT to CHANGELOG.txt. Increment the MINOR +1. Commit with the message Back to development and push. Update the docs mkdocs gh-deploy . Do promotion: blog, tweet, Wagtail Slack #twiw.","title":"Development"},{"location":"development/#development","text":"Install this package in development mode: git clone git@github.com:fourdigits/wagtail-xliff-translation.git cd wagtail-xliff-translation With your preferred virtualenv activated, install the package in development mode with the included testing and documentation dependencies: python -m pip install -e '.[test,docs]' -U","title":"Development"},{"location":"development/#tests","text":"Run tests: pytest The test app can be managed (runserver, makemigrations, etc): python manage.py makemigrations test_app","title":"Tests"},{"location":"development/#documentation","text":"Run the documentation locally: mkdocs serve Deploy the documentation to Github pages: mkdocs gh-deploy See https://fourdigits.github.io/wagtail-xliff-translation/","title":"Documentation"},{"location":"development/#release-process","text":"","title":"Release Process"},{"location":"development/#pre-release","text":"Update CONTRIBUTORS.rst if necessary Update CHANGELOG.txt Update version = <MAJOR>.<MINOR>.<PATCH> in setup.cfg Everything is committed, clean checkout","title":"Pre release"},{"location":"development/#release","text":"With an active virtual environment: pytest git tag -a <MAJOR>.<MINOR>.<PATCH> -m \"<message>\" git push --tags python -m pip install --upgrade build python -m build python -m pip install --upgrade twine python -m twine upload --repository pypi dist/*","title":"Release"},{"location":"development/#post-release","text":"Add new header <MAJOR>.<MINOR>.<PATCH> - IN DEVELOPMENT to CHANGELOG.txt. Increment the MINOR +1. Commit with the message Back to development and push. Update the docs mkdocs gh-deploy . Do promotion: blog, tweet, Wagtail Slack #twiw.","title":"Post release"}]}